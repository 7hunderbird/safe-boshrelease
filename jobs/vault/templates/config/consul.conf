<%
  require 'json'
  if p('safe.cluster_ips', []).empty? then
    raise 'You must specify the list of safe backend Vault IPs via the `safe.cluster_ips` property'
  end
  if p('safe.peer.tls.ca',   '').empty? or
     p('safe.peer.tls.certificate', '').empty? or
     p('safe.peer.tls.key',  '').empty? then

    if p('safe.peer.tls.verify') then
      raise "You cannot set `safe.peer.tls.verify` without providing a peer and CA certificates"
    end
  end

  my_ip = spec.networks.send(spec.networks.methods(false).first).ip
  leader = my_ip == p('safe.cluster_ips')[0]
%>
{
  "datacenter":         "vault",
  "leave_on_terminate": true,
  "server":             true,

  <% if !leader %>"start_join":       <%= p('safe.cluster_ips', []).to_json %>,
  "retry_join":       <%= p('safe.cluster_ips', []).to_json %>,
  <% else %>"bootstrap_expect": <%= p('safe.cluster_ips', []).size %>,<% end %>

  "verify_incoming":  false,
  "verify_outgoing":  <% if p('safe.peer.tls.verify') %>true<% else %>false<% end %>,
  "ca_file":          "/var/vcap/jobs/vault/tls/peer/ca.pem",
  "cert_file":        "/var/vcap/jobs/vault/tls/peer/cert.pem",
  "key_file":         "/var/vcap/jobs/vault/tls/peer/key.pem",
  "ports": {
    "http":  -1,
    "https": 8500
  }
}
